[{"C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\App.jsx":"1","C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\routing.jsx":"2","C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\TextBlock\\TextBlockText.jsx":"3","C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\PopUp\\PopUp.jsx":"4","C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\index.jsx":"5","C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\LoginSign\\logSignText.jsx":"6","C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\Button\\FbButton.jsx":"7","C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Pages\\Auth\\VerificateAccount\\index.jsx":"8","C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Pages\\Auth\\Login\\index.jsx":"9","C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Pages\\Auth\\Signup\\index.jsx":"10","C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Pages\\app\\main\\index.jsx":"11","C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Layout\\Navigation\\index.jsx":"12","C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\Input\\index.jsx":"13","C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Layout\\Menu\\menuText.jsx":"14","C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Layout\\Menu\\index.jsx":"15","C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\Link\\index.jsx":"16","C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\List\\index.jsx":"17","C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Pages\\app\\main\\components\\Feed\\index.jsx":"18","C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\List\\ListItem\\index.jsx":"19","C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\Button\\index.jsx":"20","C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\Form\\index.jsx":"21","C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\ImageSlider\\index.jsx":"22","C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\LoginSign\\index.jsx":"23","C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\TextBlock\\index.jsx":"24"},{"size":289,"mtime":1612527695863,"results":"25","hashOfConfig":"26"},{"size":737,"mtime":1617805573419,"results":"27","hashOfConfig":"26"},{"size":3083,"mtime":1618836925611,"results":"28","hashOfConfig":"26"},{"size":361,"mtime":1615284532325,"results":"29","hashOfConfig":"26"},{"size":783,"mtime":1619531161378,"results":"30","hashOfConfig":"26"},{"size":799,"mtime":1617807811767,"results":"31","hashOfConfig":"26"},{"size":339,"mtime":1619529252269,"results":"32","hashOfConfig":"26"},{"size":1274,"mtime":1619513736948,"results":"33","hashOfConfig":"26"},{"size":854,"mtime":1619513674845,"results":"34","hashOfConfig":"26"},{"size":776,"mtime":1619529474204,"results":"35","hashOfConfig":"26"},{"size":1176,"mtime":1619513965030,"results":"36","hashOfConfig":"26"},{"size":813,"mtime":1619513947439,"results":"37","hashOfConfig":"26"},{"size":1578,"mtime":1618311897283,"results":"38","hashOfConfig":"26"},{"size":520,"mtime":1618824640557,"results":"39","hashOfConfig":"26"},{"size":399,"mtime":1618226451308,"results":"40","hashOfConfig":"26"},{"size":467,"mtime":1618226437073,"results":"41","hashOfConfig":"26"},{"size":1715,"mtime":1619513925528,"results":"42","hashOfConfig":"26"},{"size":127,"mtime":1618237955624,"results":"43","hashOfConfig":"26"},{"size":692,"mtime":1618833180403,"results":"44","hashOfConfig":"26"},{"size":377,"mtime":1619513527005,"results":"45","hashOfConfig":"26"},{"size":13253,"mtime":1619513585407,"results":"46","hashOfConfig":"26"},{"size":1323,"mtime":1619513608042,"results":"47","hashOfConfig":"26"},{"size":3560,"mtime":1619531153773,"results":"48","hashOfConfig":"26"},{"size":750,"mtime":1619513902563,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"ipba8u",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\App.jsx",[],["102","103"],"C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\routing.jsx",[],"C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\TextBlock\\TextBlockText.jsx",[],"C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\PopUp\\PopUp.jsx",[],"C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\index.jsx",[],"C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\LoginSign\\logSignText.jsx",[],"C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\Button\\FbButton.jsx",[],"C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Pages\\Auth\\VerificateAccount\\index.jsx",[],"C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Pages\\Auth\\Login\\index.jsx",[],"C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Pages\\Auth\\Signup\\index.jsx",[],"C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Pages\\app\\main\\index.jsx",["104"],"import React, {useState } from 'react';\r\nimport Navigation from '../../../Layout/Navigation';\r\nimport {InputsText} from '../../../Components/LoginSign/logSignText';\r\nimport List from '../../../Components/List';\r\nimport Feed from './components/Feed';\r\nimport TextBlock from '../../../Components/TextBlock';\r\nimport TextBlocks from '../../../Components/TextBlock/TextBlockText';\r\n\r\nconst Main = () => {\r\n\r\n    const [following, setFollowing] = useState(false)\r\n    const [search, setSearch] = useState()\r\n    const [searchedError, setSearchError] = useState(false);\r\n\r\n    return(\r\n        <div>\r\n            <Navigation\r\n            setSearch={setSearch}\r\n             inputs={InputsText.search[0]}/>\r\n            {following ?\r\n                    <Feed/>\r\n                :\r\n                <div className='main'>\r\n                    {searchedError ?\r\n                    null :\r\n                    <TextBlock text={TextBlocks.textBlock9}/>\r\n                    }\r\n                    <List setSearchError={setSearchError} listDiv='listDiv' searched={search} following={following}/>\r\n                </div>    \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main","C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Layout\\Navigation\\index.jsx",[],"C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\Input\\index.jsx",[],"C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Layout\\Menu\\menuText.jsx",[],"C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Layout\\Menu\\index.jsx",[],"C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\Link\\index.jsx",[],"C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\List\\index.jsx",["105","106","107"],"import React, {useEffect, useState} from 'react';\r\nimport ListItem from './ListItem';\r\nimport TextBlock from '../TextBlock';\r\nimport TextBlocks from '../TextBlock/TextBlockText.jsx'\r\n\r\nconst List = (props) => {\r\n\r\n    const searched = {'type':'search'}\r\n    const [info, setInfo] = useState()\r\n\r\n    useEffect(()=> {\r\n        if (!props.following){\r\n            searched['searched'] = 'random'\r\n            getList(searched)\r\n        }\r\n    },[])\r\n\r\n    useEffect(()=> {\r\n        if (props.searched){\r\n            searched['searched'] = props.searched\r\n            getList(searched)\r\n            props.setSearchError(true)\r\n        }\r\n    },[props.searched])\r\n\r\n    const getList = (searched) => {\r\n        const formData = new FormData()\r\n        for (let [key, value] of Object.entries(searched)){\r\n            formData.append(key, value)\r\n        }\r\n        fetch('http://localhost/backend/main/search.php',{\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            body:formData\r\n        }).then(response => response.json())\r\n        .then( result => setInfo(result))\r\n    }\r\n   \r\n    if (info && info.length >= 1){\r\n        return(\r\n            <div className={props.listDiv}>\r\n                {info.map((element, i)=> {\r\n                    return(\r\n                        <ListItem \r\n                        key={element+i}\r\n                        info={element}/>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    } else if (info && info.search == 'notFound'){\r\n        return(\r\n            <div>\r\n                <TextBlock text={TextBlocks.textBlock10}/>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return null\r\n    }   \r\n}\r\n\r\nexport default List","C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Pages\\app\\main\\components\\Feed\\index.jsx",[],"C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\List\\ListItem\\index.jsx",[],"C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\Button\\index.jsx",[],"C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\Form\\index.jsx",["108","109","110","111","112","113","114","115","116","117","118","119","120","121"],"import React, {useState, useEffect} from 'react';\r\nimport Button from '../Button';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Input from '../Input';\r\n\r\nfunction Form(props){\r\n\r\n    const [loginForm, setLoginForm] = useState({})\r\n    const [signUpForm, setSignUpForm] = useState({})\r\n    const [buttonDisabled, setButtonState] = useState(true)\r\n    const [signRedInputs, setSignRedInputs] = useState([])\r\n    const [verificationCode, setVerificationCodeInput] = useState({})\r\n    \r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    useEffect( () => {\r\n        validateForm()\r\n        hidePopUp()\r\n    },[loginForm, signUpForm, verificationCode, location.pathname])\r\n\r\n    const cleanMessages = () => {\r\n        props.setPopUpMessages([])\r\n        props.setShowPopUp(false)\r\n    }\r\n\r\n    const clearForm = () => {\r\n        document.querySelectorAll('input').forEach(el => el.value = '')\r\n        setSignUpForm({})\r\n        setLoginForm({})\r\n    }\r\n\r\n    useEffect( ()=>{\r\n        return () => {\r\n            setSignRedInputs([])\r\n            cleanMessages()\r\n    }},[location.pathname])\r\n\r\n\r\n    const redingInputs = () => {\r\n\r\n        if (location.pathname === '/signUp'){\r\n        let signInputArr = []\r\n\r\n        if (props.popUpMessages.includes('Number has to have 9 digits')){\r\n            signInputArr.push(1)\r\n        } else signInputArr.push(0)\r\n\r\n        if (props.popUpMessages.includes('Invalid email')){\r\n            signInputArr.push(1)\r\n        } else signInputArr.push(0)\r\n\r\n        if (signUpForm.fullName < 3){\r\n            signInputArr.push(1)\r\n        } else signInputArr.push(0)\r\n\r\n        if (signUpForm.username < 3){\r\n            signInputArr.push(1)\r\n        } else signInputArr.push(0)\r\n        \r\n        if (props.popUpMessages.includes('Password should have at least one big letter, one number and 8 characters')){\r\n            signInputArr.push(1)\r\n        } else signInputArr.push(0)\r\n        \r\n        setTimeout(()=> {\r\n            setSignRedInputs(signInputArr)\r\n        },1000)\r\n\r\n        setTimeout(()=> {\r\n            setSignRedInputs([])\r\n        },6000)\r\n    }\r\n}\r\n\r\n    const showPopup = (type) => {\r\n        let passRegex = new RegExp('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{8,}$', 'gm');\r\n        let emailRegex = new RegExp('.+@.{2,15}\\..{1,15}')\r\n\r\n        if (location.pathname === '/'){\r\n            let messageArray = props.popUpMessages;\r\n\r\n            if (loginForm.usephemail){\r\n                if (loginForm.usephemail.length < 3){\r\n                    if (!messageArray.includes('Please correct login')){\r\n                        messageArray.push('Please correct login')\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (loginForm.password){\r\n                if (loginForm.password.length <3){\r\n                    if (!messageArray.includes('Password should have at least one big letter, one number and 3 characters')){\r\n                        messageArray.push('Password should have at least one big letter, one number and 3 characters')\r\n                    }\r\n                }\r\n            }\r\n\r\n            props.setPopUpMessages(messageArray)\r\n            setTimeout(()=> {\r\n                props.setShowPopUp(true)\r\n            },1000)\r\n        }\r\n\r\n        if (location.pathname === '/signUp'){\r\n            let msgArray = props.popUpMessages;\r\n\r\n            if (signUpForm.number){\r\n                if (signUpForm.number.length !=9 ){\r\n                    if (!msgArray.includes('Number has to have 9 digits')){\r\n                        msgArray.push('Number has to have 9 digits')\r\n                    }\r\n                }\r\n            }\r\n            if (signUpForm.email){\r\n                if (!signUpForm.email.match(emailRegex)){\r\n                    if (!msgArray.includes('Invalid email')){\r\n                        msgArray.push('Invalid email')\r\n                    }\r\n                } \r\n            }\r\n            if (signUpForm.fullName || signUpForm.username){\r\n                if (signUpForm.username.length < 3 || signUpForm.fullName.length < 3){\r\n                    if (!msgArray.includes('Fullname and username should have at least 3 letters')){\r\n                        msgArray.push('Fullname and username should have at least 3 letters')\r\n                    }\r\n                } \r\n            }\r\n            if (signUpForm.password){\r\n                if (!signUpForm.password.match(passRegex)){\r\n                    if (!msgArray.includes('Password should have at least one big letter, one number and 3 characters')){\r\n                        msgArray.push('Password should have at least one big letter, one number and 3 characters')\r\n                    }\r\n                }\r\n            }\r\n            \r\n            props.setPopUpMessages(msgArray)\r\n            setTimeout(()=> {\r\n                props.setShowPopUp(true);\r\n            },1000)\r\n\r\n        } \r\n\r\n        if (location.pathname === '/signUp/verify'){\r\n            let checkArray = props.popUpMessages;\r\n\r\n            if (type == 'unactivated' ){\r\n                if (!checkArray.includes('Incorrect code')){\r\n                    checkArray.push('Incorrect code')\r\n                }\r\n            }\r\n            props.setPopUpMessages(checkArray)\r\n            setTimeout(()=> {\r\n                props.setShowPopUp(true);\r\n            },1000)\r\n\r\n            setTimeout(()=> {\r\n                cleanMessages()\r\n            },5000)\r\n        }\r\n    }\r\n\r\n    const hidePopUp = () => {\r\n        let passRegex = new RegExp('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{5,}$', 'gm');\r\n        let emailRegex = new RegExp('.+@.{2,15}\\..{1,15}')\r\n\r\n        if (location.pathname === '/'){\r\n\r\n            let messageArray = props.popUpMessages;\r\n\r\n            if (loginForm.usephemail){\r\n                if ((loginForm.usephemail.length >= 3)){\r\n                    let newArray = messageArray.filter(element => element !== 'Please correct login')\r\n                    messageArray = newArray;\r\n                }\r\n            }\r\n\r\n            if (loginForm.password){\r\n                if (loginForm.password.length >= 3){\r\n                    let newArray = messageArray.filter(element => element !== 'Password should have at least one big letter, one number and 3 characters')\r\n                    messageArray = newArray;\r\n                }\r\n            }\r\n            props.setPopUpMessages(messageArray)\r\n        }\r\n\r\n        if (location.pathname === '/signUp'){\r\n            let msgArray = props.popUpMessages;\r\n\r\n            if (signUpForm.number && signUpForm.number.length == 9 ){\r\n                let newArray  = msgArray.filter(elem => elem !== 'Number has to have 9 digits')\r\n                    msgArray = newArray;\r\n            }\r\n            if (signUpForm.email && signUpForm.email.match(emailRegex)){\r\n                let newArray  = msgArray.filter(elem => elem !== 'Invalid email')\r\n                msgArray = newArray;\r\n                    \r\n            }\r\n            if ((signUpForm.fullName && signUpForm.fullName.length >= 3) && (signUpForm.username && signUpForm.username.length >= 3) ){\r\n                let newArray  = msgArray.filter(elem => elem !== 'Fullname and username should have at least 3 letters')\r\n                msgArray = newArray; \r\n            }\r\n            if (signUpForm.password && signUpForm.password.match(passRegex)){\r\n                let newArray  = msgArray.filter(elem => elem !== 'Password should have at least one big letter, one number and 3 characters')\r\n                msgArray = newArray; \r\n            }\r\n            props.setPopUpMessages(msgArray)\r\n        }\r\n    }\r\n\r\n\r\n    const validateForm = () => {\r\n\r\n        if (location.pathname === '/'){\r\n            if (loginForm.password && loginForm.password.length >= 3 && loginForm.usephemail && loginForm.usephemail.length >= 3){\r\n                setButtonState(false);\r\n            } else setButtonState(true)\r\n        } \r\n        if (location.pathname === '/signUp'){\r\n            if (signUpForm.number && signUpForm.email && signUpForm.fullName && signUpForm.username && signUpForm.password &&\r\n                signUpForm.number.length >= 3 && signUpForm.fullName.length >= 3 && signUpForm.username.length >= 3 && signUpForm.email.length >= 3 && signUpForm.password.length >= 3){\r\n                setButtonState(false)\r\n            } else setButtonState(true);\r\n        }\r\n        if (location.pathname === '/signUp/verify'){\r\n            if ((verificationCode.verificationCode && verificationCode.verificationCode.length == 4) ){\r\n                setButtonState(false)\r\n            } else setButtonState(true)\r\n        }\r\n    }\r\n\r\n    const checkForm = () => {\r\n        const login = 'http://localhost/backend/auth/login.php'\r\n        const sign = 'http://localhost/backend/auth/signup.php'\r\n        const verificateEmail = 'http://localhost/backend/auth/verificateEmail.php'\r\n\r\n        if (props.popUpMessages && props.popUpMessages.length == 0){\r\n            if (location.pathname === '/'){\r\n                postSignUpForm(loginForm, 'login', login)\r\n            }\r\n\r\n            if (location.pathname === '/signUp'){\r\n                postSignUpForm(signUpForm, 'signUp', sign)\r\n            }\r\n            if (location.pathname === '/signUp/verify'){\r\n                postSignUpForm(verificationCode, 'verificateCode', verificateEmail)\r\n            }\r\n        }\r\n    }\r\n\r\n    const changeFormIfDataExists = (response) => {\r\n        let messageArray = props.popUpMessages;\r\n\r\n        if (response.usernameExists){\r\n            messageArray.push(\"This username's already taken. Please change username\")\r\n        }\r\n        if (response.emailExists){\r\n            messageArray.push(\"This email's already connected to the account. Please login instead or use another one.\")\r\n        }\r\n\r\n        if (response.loggedIn == false){\r\n            messageArray.push('Wrong password');\r\n        }\r\n        if (response.loginError == 'accountNotExisting'){\r\n            messageArray.push(\"Account with these credentials does not exist. Please sign up\")\r\n        }\r\n        props.setPopUpMessages(messageArray)\r\n\r\n        setTimeout(()=> {\r\n            props.setShowPopUp(true);\r\n        },1000)\r\n\r\n        setTimeout(()=> {\r\n            cleanMessages()\r\n        },7000)\r\n    }\r\n\r\n    const postSignUpForm = (form, formType, http) => {\r\n        let formData = new FormData()\r\n        for (let [key, value] of Object.entries(form)){\r\n            formData.append(key, value)\r\n        }\r\n        formData.append('type', formType);\r\n        fetch(http, {\r\n            method: 'POST',\r\n            mode:'cors',\r\n            body: formData\r\n            })\r\n            .then(response => response.json()).then((response) => {\r\n                if (location.pathname === '/signUp'){\r\n                    if (response.registered){\r\n                        window.localStorage.setItem('email',form.email)\r\n                        clearForm();\r\n                        history.push('/signUp/verify')\r\n                    } else changeFormIfDataExists(response)\r\n                }\r\n                if (location.pathname === '/'){\r\n                    if (response[\"loggedIn\"] == true){\r\n                        clearForm();\r\n                        history.push('/main')\r\n                    } else changeFormIfDataExists(response)\r\n                }\r\n                if (location.pathname === '/signUp/verify'){\r\n                    if (response.activated == false){\r\n                        showPopup('unactivated')\r\n                    } \r\n                    if (response.activated == true){\r\n                        history.push('/main')\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n    const buttonFunctionWrapper = () => {\r\n        showPopup()\r\n        redingInputs()\r\n        checkForm()\r\n    }\r\n\r\n    return(\r\n        <div className='form__formContainer'>\r\n            <form className='form__formArea'\r\n             id='form'>\r\n                {props.inputs.map((inputType, i)=> {\r\n                    return(\r\n                        <Input\r\n                        onChange={props.onChange}\r\n                        inputClass={props.inputClass}\r\n                        loginForm={loginForm}\r\n                        setLoginForm={setLoginForm}\r\n                        signUpForm={signUpForm}\r\n                        setSignUpForm={setSignUpForm}\r\n                        verificationCode={verificationCode}\r\n                        setVerificationCodeInput={setVerificationCodeInput}\r\n                        key={[props.inputs]+inputType.name+[i]}\r\n                        style={{border: (signRedInputs[i] === 1) ?\r\n                            '1px solid red' : '1px solid rgb(180, 173, 173)'}} \r\n                        inputType={inputType} />\r\n                        )\r\n                    })}\r\n                {props.button ? \r\n                <Button \r\n                buttonText={props.buttonName} \r\n                buttonClass={props.buttonClass} \r\n                onClick={() =>{buttonFunctionWrapper()}} \r\n                disabled={props.inputs ? buttonDisabled : null}/>\r\n                : null}   \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form","C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\ImageSlider\\index.jsx",[],"C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\LoginSign\\index.jsx",["122"],"C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\TextBlock\\index.jsx",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":11,"column":23,"nodeType":"129","messageId":"130","endLine":11,"endColumn":35},{"ruleId":"131","severity":1,"message":"132","line":16,"column":7,"nodeType":"133","endLine":16,"endColumn":9,"suggestions":"134"},{"ruleId":"131","severity":1,"message":"135","line":24,"column":7,"nodeType":"133","endLine":24,"endColumn":23,"suggestions":"136"},{"ruleId":"137","severity":1,"message":"138","line":51,"column":36,"nodeType":"139","messageId":"140","endLine":51,"endColumn":38},{"ruleId":"131","severity":1,"message":"141","line":21,"column":7,"nodeType":"133","endLine":21,"endColumn":67,"suggestions":"142"},{"ruleId":"131","severity":1,"message":"143","line":38,"column":8,"nodeType":"133","endLine":38,"endColumn":27,"suggestions":"144"},{"ruleId":"145","severity":1,"message":"146","line":78,"column":48,"nodeType":"147","messageId":"148","endLine":78,"endColumn":49,"suggestions":"149"},{"ruleId":"137","severity":1,"message":"150","line":109,"column":46,"nodeType":"139","messageId":"140","endLine":109,"endColumn":48},{"ruleId":"137","severity":1,"message":"138","line":147,"column":22,"nodeType":"139","messageId":"140","endLine":147,"endColumn":24},{"ruleId":"145","severity":1,"message":"146","line":165,"column":48,"nodeType":"147","messageId":"148","endLine":165,"endColumn":49,"suggestions":"151"},{"ruleId":"137","severity":1,"message":"138","line":190,"column":63,"nodeType":"139","messageId":"140","endLine":190,"endColumn":65},{"ruleId":"137","severity":1,"message":"138","line":226,"column":96,"nodeType":"139","messageId":"140","endLine":226,"endColumn":98},{"ruleId":"137","severity":1,"message":"138","line":237,"column":63,"nodeType":"139","messageId":"140","endLine":237,"endColumn":65},{"ruleId":"137","severity":1,"message":"138","line":261,"column":31,"nodeType":"139","messageId":"140","endLine":261,"endColumn":33},{"ruleId":"137","severity":1,"message":"138","line":264,"column":33,"nodeType":"139","messageId":"140","endLine":264,"endColumn":35},{"ruleId":"137","severity":1,"message":"138","line":298,"column":46,"nodeType":"139","messageId":"140","endLine":298,"endColumn":48},{"ruleId":"137","severity":1,"message":"138","line":304,"column":44,"nodeType":"139","messageId":"140","endLine":304,"endColumn":46},{"ruleId":"137","severity":1,"message":"138","line":307,"column":44,"nodeType":"139","messageId":"140","endLine":307,"endColumn":46},{"ruleId":"131","severity":1,"message":"152","line":17,"column":4,"nodeType":"133","endLine":17,"endColumn":6,"suggestions":"153"},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"no-unused-vars","'setFollowing' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.following' and 'searched'. Either include them or remove the dependency array.","ArrayExpression",["156"],"React Hook useEffect has missing dependencies: 'props' and 'searched'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["157"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'hidePopUp' and 'validateForm'. Either include them or remove the dependency array.",["158"],"React Hook useEffect has a missing dependency: 'cleanMessages'. Either include it or remove the dependency array.",["159"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["160","161"],"Expected '!==' and instead saw '!='.",["162","163"],"React Hook useEffect has a missing dependency: 'facebookLogin'. Either include it or remove the dependency array.",["164"],"no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"messageId":"173","fix":"174","desc":"175"},{"messageId":"176","fix":"177","desc":"178"},{"messageId":"173","fix":"179","desc":"175"},{"messageId":"176","fix":"180","desc":"178"},{"desc":"181","fix":"182"},"Update the dependencies array to be: [props.following, searched]",{"range":"183","text":"184"},"Update the dependencies array to be: [props, props.searched, searched]",{"range":"185","text":"186"},"Update the dependencies array to be: [loginForm, signUpForm, verificationCode, location.pathname, validateForm, hidePopUp]",{"range":"187","text":"188"},"Update the dependencies array to be: [cleanMessages, location.pathname]",{"range":"189","text":"190"},"removeEscape",{"range":"191","text":"192"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"193","text":"194"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"195","text":"192"},{"range":"196","text":"194"},"Update the dependencies array to be: [facebookLogin]",{"range":"197","text":"198"},[443,445],"[props.following, searched]",[641,657],"[props, props.searched, searched]",[692,752],"[loginForm, signUpForm, verificationCode, location.pathname, validateForm, hidePopUp]",[1154,1173],"[cleanMessages, location.pathname]",[2364,2365],"",[2364,2364],"\\",[5677,5678],[5677,5677],[490,492],"[facebookLogin]"]