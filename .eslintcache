[{"C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\index.js":"1","C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\App.jsx":"2","C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\routing.jsx":"3","C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\TextBlock\\TextBlock.jsx":"4","C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\TextBlock\\TextBlockText.jsx":"5","C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\Form\\Form.jsx":"6","C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\Button\\Button.jsx":"7","C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\ImageSlider\\ImageSlider.jsx":"8","C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\LoginSign\\LogSign.jsx":"9","C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\LoginSign\\LogSignText.jsx":"10","C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\PopUp\\PopUp.jsx":"11","C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\Message\\Message.jsx":"12"},{"size":797,"mtime":1612532179224,"results":"13","hashOfConfig":"14"},{"size":289,"mtime":1612527695863,"results":"15","hashOfConfig":"14"},{"size":1109,"mtime":1616239740702,"results":"16","hashOfConfig":"14"},{"size":736,"mtime":1612283439222,"results":"17","hashOfConfig":"14"},{"size":1871,"mtime":1615540012151,"results":"18","hashOfConfig":"14"},{"size":11873,"mtime":1616246356973,"results":"19","hashOfConfig":"14"},{"size":329,"mtime":1615384745321,"results":"20","hashOfConfig":"14"},{"size":1457,"mtime":1612282114203,"results":"21","hashOfConfig":"14"},{"size":3297,"mtime":1615379036296,"results":"22","hashOfConfig":"14"},{"size":712,"mtime":1615537794154,"results":"23","hashOfConfig":"14"},{"size":361,"mtime":1615284532325,"results":"24","hashOfConfig":"14"},{"size":1566,"mtime":1616245986086,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"ipba8u",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},"C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\index.js",[],["55","56"],"C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\App.jsx",[],"C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\routing.jsx",[],"C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\TextBlock\\TextBlock.jsx",[],"C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\TextBlock\\TextBlockText.jsx",[],"C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\Form\\Form.jsx",["57","58","59","60","61","62","63"],"import React, {useState, useEffect} from 'react';\r\nimport {InputsText} from '../LoginSign/LogSignText';\r\nimport Button from '../Button/Button';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction Form(props){\r\n\r\n    const [loginForm, setLoginForm] = useState({})\r\n    const [signUpForm, setSignUpForm] = useState({})\r\n    const [buttonDisabled, setButtonState] = useState(true)\r\n    const [logRedInputs, setLogRedInputs] = useState([])\r\n    const [signRedInputs, setSignRedInputs] = useState([])\r\n    \r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    useEffect( () => {\r\n        if (location.pathname === '/' || location.pathname === '/signUp'){\r\n            hidePopUp()\r\n            validateForm();\r\n        } \r\n    },[loginForm, signUpForm, location.pathname])\r\n\r\n    const cleanMessages = () => {\r\n        props.setPopUpMessages([])\r\n        props.setShowPopUp(false)\r\n    }\r\n\r\n    const clearForm = () => {\r\n        document.querySelectorAll('input').forEach(el => el.value = '')\r\n        setSignUpForm({})\r\n        setLoginForm({})\r\n    }\r\n\r\n    const cleaningRedInputs = () => {\r\n        setLogRedInputs([])\r\n        setSignRedInputs([])\r\n    }\r\n    useEffect( ()=>{\r\n        if (location.pathname === '/' || location.pathname === '/signUp'){\r\n            return () => {\r\n                cleaningRedInputs()\r\n                cleanMessages()\r\n        } \r\n    }},[location.pathname])\r\n\r\n\r\n    const redingInputs = () => {\r\n\r\n        if (location.pathname === '/signUp'){\r\n        let signInputArr = []\r\n\r\n        if (props.popUpMessages.includes('Number has to have 9 digits')){\r\n            signInputArr.push(1)\r\n        } else signInputArr.push(0)\r\n\r\n        if (props.popUpMessages.includes('Invalid email')){\r\n            signInputArr.push(1)\r\n        } else signInputArr.push(0)\r\n\r\n        if (signUpForm.fullName < 3){\r\n            signInputArr.push(1)\r\n        } else signInputArr.push(0)\r\n\r\n        if (signUpForm.username < 3){\r\n            signInputArr.push(1)\r\n        } else signInputArr.push(0)\r\n        \r\n        if (props.popUpMessages.includes('Password should have at least one big letter, one number and 8 characters')){\r\n            signInputArr.push(1)\r\n        } else signInputArr.push(0)\r\n        \r\n        setTimeout(()=> {\r\n            setSignRedInputs(signInputArr)\r\n        },1000)\r\n\r\n        setTimeout(()=> {\r\n            setSignRedInputs([])\r\n        },10000)\r\n\r\n    }\r\n}\r\n\r\n    const showPopup = () => {\r\n        let passRegex = new RegExp('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{8,}$', 'gm');\r\n        let emailRegex = new RegExp('.+@.{2,15}\\..{1,15}')\r\n\r\n        if (location.pathname === '/'){\r\n            let messageArray = props.popUpMessages;\r\n\r\n            if (loginForm.usephemail){\r\n                if (loginForm.usephemail.length < 3){\r\n                    if (!messageArray.includes('Please correct login')){\r\n                        messageArray.push('Please correct login')\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (loginForm.password){\r\n                if (loginForm.password.length <3){\r\n                    if (!messageArray.includes('Password should have at least one big letter, one number and 3 characters')){\r\n                        messageArray.push('Password should have at least one big letter, one number and 3 characters')\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            props.setPopUpMessages(messageArray)\r\n            setTimeout(()=> {\r\n                props.setShowPopUp(true)\r\n            },1000)\r\n        }\r\n\r\n        if (location.pathname === '/signUp'){\r\n            let msgArray = props.popUpMessages;\r\n\r\n            if (signUpForm.number){\r\n                if (signUpForm.number.length !=9 ){\r\n                    if (!msgArray.includes('Number has to have 9 digits')){\r\n                        msgArray.push('Number has to have 9 digits')\r\n                    }\r\n                }\r\n            }\r\n            if (signUpForm.email){\r\n                if (!signUpForm.email.match(emailRegex)){\r\n                    if (!msgArray.includes('Invalid email')){\r\n                        msgArray.push('Invalid email')\r\n                    }\r\n                } \r\n            }\r\n            if (signUpForm.fullName || signUpForm.username){\r\n                if (signUpForm.username.length < 3 || signUpForm.fullName.length < 3){\r\n                    if (!msgArray.includes('Fullname and username should have at least 3 letters')){\r\n                        msgArray.push('Fullname and username should have at least 3 letters')\r\n                    }\r\n                } \r\n            }\r\n            if (signUpForm.password){\r\n                if (!signUpForm.password.match(passRegex)){\r\n                    if (!msgArray.includes('Password should have at least one big letter, one number and 3 characters')){\r\n                        msgArray.push('Password should have at least one big letter, one number and 3 characters')\r\n                    }\r\n                }\r\n            }\r\n            \r\n            props.setPopUpMessages(msgArray)\r\n            setTimeout(()=> {\r\n                props.setShowPopUp(true);\r\n            },1000)\r\n            } \r\n    }\r\n\r\n    const hidePopUp = () => {\r\n        let passRegex = new RegExp('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{5,}$', 'gm');\r\n        let emailRegex = new RegExp('.+@.{2,15}\\..{1,15}')\r\n\r\n        if (location.pathname === '/'){\r\n\r\n            let messageArray = props.popUpMessages;\r\n\r\n            if (loginForm.usephemail){\r\n                if ((loginForm.usephemail.length >= 3)){\r\n                    let newArray = messageArray.filter(element => element !== 'Please correct login')\r\n                    messageArray = newArray;\r\n                }\r\n            }\r\n\r\n            if (loginForm.password){\r\n                if (loginForm.password.length >= 3){\r\n                    let newArray = messageArray.filter(element => element !== 'Password should have at least one big letter, one number and 3 characters')\r\n                    messageArray = newArray;\r\n                }\r\n            }\r\n            props.setPopUpMessages(messageArray)\r\n            }\r\n\r\n        if (location.pathname === '/signUp'){\r\n            let msgArray = props.popUpMessages;\r\n\r\n            if (signUpForm.number && signUpForm.number.length == 9 ){\r\n                let newArray  = msgArray.filter(elem => elem !== 'Number has to have 9 digits')\r\n                    msgArray = newArray;\r\n            }\r\n            if (signUpForm.email && signUpForm.email.match(emailRegex)){\r\n                let newArray  = msgArray.filter(elem => elem !== 'Invalid email')\r\n                msgArray = newArray;\r\n                    \r\n            }\r\n            if ((signUpForm.fullName && signUpForm.fullName.length >= 3) && (signUpForm.username && signUpForm.username.length >= 3) ){\r\n                let newArray  = msgArray.filter(elem => elem !== 'Fullname and username should have at least 3 letters')\r\n                msgArray = newArray; \r\n            }\r\n            if (signUpForm.password && signUpForm.password.match(passRegex)){\r\n                let newArray  = msgArray.filter(elem => elem !== 'Password should have at least one big letter, one number and 3 characters')\r\n                msgArray = newArray; \r\n            }\r\n            props.setPopUpMessages(msgArray)\r\n        }\r\n    }\r\n\r\n\r\n    const validateForm = () => {\r\n\r\n        if (location.pathname === '/'){\r\n            if (loginForm.password && loginForm.password.length >= 3 && loginForm.usephemail && loginForm.usephemail.length >= 3){\r\n                setButtonState(false);\r\n            } else\r\n                setButtonState(true)\r\n    \r\n        } else {\r\n            if (signUpForm.number && signUpForm.email && signUpForm.fullName && signUpForm.username && signUpForm.password &&\r\n                signUpForm.number.length >= 3 && signUpForm.fullName.length >= 3 && signUpForm.username.length >= 3 && signUpForm.email.length >= 3 && signUpForm.password.length >= 3){\r\n                setButtonState(false)\r\n            }\r\n            else {\r\n                setButtonState(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    const getForm = (input, inputValue) => {\r\n        if (location.pathname === '/' ){\r\n            setLoginForm({...loginForm, [input]:inputValue})\r\n        }\r\n\r\n        if (location.pathname === '/signUp') {\r\n            setSignUpForm({...signUpForm, [input]:inputValue})\r\n        }\r\n        if (location.pathname === '/message'){\r\n            props.setVerificationCodeInput(inputValue)\r\n        }\r\n    }\r\n\r\n    const checkForm = () => {\r\n        if (props.popUpMessages.length == 0){\r\n\r\n            const login = 'http://localhost/backend/auth/login.php'\r\n            const sign = 'http://localhost/backend/auth/signup.php'\r\n\r\n            if (location.pathname === '/'){\r\n            postSignUpForm(loginForm, 'login', login)\r\n            }\r\n\r\n            if (location.pathname === '/signUp'){\r\n            postSignUpForm(signUpForm, 'signUp', sign)\r\n            }\r\n        }\r\n    }\r\n\r\n    const changeFormIfDataExists = (response) => {\r\n        let messageArray = props.popUpMessages;\r\n\r\n        if (response.usernameExists){\r\n            messageArray.push(\"This username's already taken. Please change username\")\r\n        }\r\n        if (response.emailExists){\r\n            messageArray.push(\"This email's already connected to the account. Please login instead or use another one.\")\r\n        }\r\n        props.setPopUpMessages(messageArray)\r\n\r\n        setTimeout(()=> {\r\n            props.setShowPopUp(true);\r\n        },1000)\r\n\r\n        setTimeout(()=> {\r\n            cleanMessages()\r\n        },7000)\r\n\r\n    }\r\n\r\n    const postSignUpForm = (form, formType, http) => {\r\n\r\n        let formData = new FormData()\r\n        for (let [key, value] of Object.entries(form)){\r\n            formData.append(key, value)\r\n        }\r\n\r\n        formData.append('type', formType);\r\n        fetch(http, {\r\n            method: 'POST',\r\n            mode:'cors',\r\n            body: formData\r\n            })\r\n            .then(response => response.json()).then((response) => {\r\n                if (response.registered){\r\n                    clearForm();\r\n                    history.push('/signUp/message')\r\n\r\n                } else changeFormIfDataExists(response)\r\n            })\r\n    }\r\n\r\n    const buttonFunctionWrapper = () => {\r\n        showPopup()\r\n        redingInputs()\r\n        checkForm()\r\n    }\r\n\r\n    return(\r\n        <div className='form__formContainer'>\r\n            <form className='form__formArea' id='form'>\r\n                {InputsText[props.inputs].map((inputType, i)=> {\r\n                    return(\r\n                        <div className='form__inputArea' key={[props.inputs]+inputType.name+[i]}>\r\n                            <input\r\n                                style={{\r\n                                    border: (signRedInputs[i] === 1 || logRedInputs[i] === 1) ? '1px solid red' : '1px solid rgb(180, 173, 173)'\r\n                                }}\r\n                                onChange={e => {getForm(inputType.useAs, e.target.value);}}\r\n                                type={inputType.type ? inputType.type : null} \r\n                                name={inputType.name}\r\n                                className={props.inputClass}\r\n                                placeholder={inputType.name}\r\n                                 />\r\n                        </div>\r\n                        )\r\n                    })}\r\n                {props.button ? \r\n                <Button buttonText={props.buttonName} buttonClass='button button--form' onClick={() =>{buttonFunctionWrapper()}} disabled={buttonDisabled}/>\r\n                : null\r\n                }   \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form","C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\Button\\Button.jsx",[],"C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\ImageSlider\\ImageSlider.jsx",[],"C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\LoginSign\\LogSign.jsx",["64"],"import React, { useEffect, useState} from 'react';\r\nimport ImageSlider from '../ImageSlider/ImageSlider';\r\nimport TextBlock from '../TextBlock/TextBlock';\r\nimport TextBlockTexts from '../TextBlock/TextBlockText';\r\nimport Form from '../Form/Form';\r\nimport { useLocation } from 'react-router-dom'\r\nimport PopUp from '../PopUp/PopUp';\r\n\r\nfunction LogSign(props){\r\n\r\n   const [showPopUp, setShowPopUp] = useState(false)\r\n   const [popUpMessages, setPopUpMessages] = useState([])\r\n\r\n    useEffect(() => {\r\n        facebookLogin();\r\n    }, [])\r\n\r\n    const location = useLocation();\r\n\r\n    const facebookLogin = () => {\r\n        if (window.FB) {\r\n            window.FB.Event.subscribe('auth.login', (response) => {\r\n                getData();\r\n            });\r\n        } else {\r\n            setTimeout(() => facebookLogin(), 1000)\r\n        }\r\n    }\r\n\r\n    const getData = () => {\r\n        window.FB.api(\r\n            '/me',\r\n            'GET',\r\n            {\"fields\":\"id, name, email\"},\r\n            (response) => {\r\n                fetchSQl(response)\r\n            }\r\n        )\r\n    }\r\n\r\n    const fetchSQl = (data) => {\r\n        let fbLogin = new FormData();\r\n        for (let [key, value] of Object.entries(data)){\r\n            fbLogin.append(key, value)\r\n        }\r\n        fbLogin.append('type', 'fbLogin')\r\n        fetch('http://localhost/backend/auth/login.php', {\r\n            method:'POST',\r\n            mode:'cors',\r\n            body: fbLogin\r\n        }).then(response => response.text())\r\n    }\r\n\r\n    return(\r\n        <div className='logSign' style={{padding:props.inputs === 'loginInput' ? '11.5rem 2rem' : '6.1rem 2rem'}}>\r\n            {props.imageSlider === 'login' ? \r\n                <ImageSlider imageSlider='login'/>\r\n            : null \r\n            }\r\n            <div \r\n            className=\"logSign__Instagram\">\r\n                <div className='logSign__log'>\r\n                    <TextBlock text={TextBlockTexts.textBlock1} />\r\n                    <Form inputs={props.inputs} showPopUp={showPopUp} buttonName={props.buttonName} inputClass='form__input form__input--form' setPopUpMessages={setPopUpMessages} popUpMessages={popUpMessages} button  setShowPopUp={setShowPopUp}/>\r\n                    <span className='logSign__divide'>OR</span>\r\n                    <div className=\"fb-login-button logSign__facebook\" data-width=\"278\" data-size=\"large\" data-button-type=\"continue_with\" \r\n                    data-layout=\"default\" data-auto-logout-link=\"true\" data-use-continue-as=\"false\" data-scope=\"email\">\r\n                    </div>\r\n                    {props.question === 'login' ? \r\n                    <p className='logSign__bellowParagraph'>By signing up, you agree to our Terms. Any data submited will not be used against you and will be collected only for educational purpose of this project.</p>\r\n                        : null    \r\n                    } \r\n                </div>\r\n                <TextBlock text={props.textBlock}/>\r\n            </div>\r\n            {showPopUp === true ? \r\n            <PopUp popUpClass={location.pathname === '/' ? 'popUp popUp--logged' : 'popUp popUp--signed' } key={popUpMessages.length} class='popUp__message popUp__message--error' messages={popUpMessages}/>  \r\n            : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogSign\r\n\r\n","C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\LoginSign\\LogSignText.jsx",[],["65","66"],"C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\PopUp\\PopUp.jsx",[],"C:\\Users\\Pusia\\Desktop\\instagram-clone\\src\\Components\\Message\\Message.jsx",["67","68"],"import React, {useState} from 'react';\r\nimport Button from '../Button/Button';\r\nimport Form from '../Form/Form';\r\nimport TextBlock from '../TextBlock/TextBlock';\r\nimport TextBlocks from '../TextBlock/TextBlockText';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n\r\nfunction Message(props){\r\n\r\n    const [verificationCode, setVerificationCodeInput] = useState()\r\n\r\n    const location = useLocation();\r\n\r\n    const attachFunction = () => {\r\n        if (location.pathname === '/message'){\r\n            return () => {}\r\n        }\r\n    }\r\n    return(\r\n        <div className={props.modaldivClass}>\r\n            <div className='textBlock__question textBlock__question--column'>\r\n                <TextBlock text={props.textBlock1}/>\r\n                <TextBlock text={props.textBlock2}/>\r\n                {props.form ? \r\n                 <Form inputClass={props.inputClass} inputs='confirmInput' setVerificationCodeInput={setVerificationCodeInput} />\r\n                 : null}\r\n                {props.button ?\r\n                <Button buttonClass='button button--confirm' onClick={attachFunction()} buttonText={props.buttonName}/>\r\n                : null}\r\n            </div>\r\n            {props.quantity == 2 ?\r\n                <div className='textBlock__question textBlock__question--column'>\r\n                    <TextBlock text={TextBlocks.textBlock6} />\r\n                    <Button buttonClass='button button--confirm' buttonText={props.buttonName1}/>\r\n                </div>\r\n            : null \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":23,"column":7,"nodeType":"75","endLine":23,"endColumn":49,"suggestions":"76"},{"ruleId":"73","severity":1,"message":"77","line":46,"column":8,"nodeType":"75","endLine":46,"endColumn":27,"suggestions":"78"},{"ruleId":"79","severity":1,"message":"80","line":87,"column":48,"nodeType":"81","messageId":"82","endLine":87,"endColumn":49,"suggestions":"83"},{"ruleId":"84","severity":1,"message":"85","line":119,"column":46,"nodeType":"86","messageId":"87","endLine":119,"endColumn":48},{"ruleId":"79","severity":1,"message":"80","line":156,"column":48,"nodeType":"81","messageId":"82","endLine":156,"endColumn":49,"suggestions":"88"},{"ruleId":"84","severity":1,"message":"89","line":181,"column":63,"nodeType":"86","messageId":"87","endLine":181,"endColumn":65},{"ruleId":"84","severity":1,"message":"89","line":236,"column":40,"nodeType":"86","messageId":"87","endLine":236,"endColumn":42},{"ruleId":"73","severity":1,"message":"90","line":16,"column":8,"nodeType":"75","endLine":16,"endColumn":10,"suggestions":"91"},{"ruleId":"69","replacedBy":"92"},{"ruleId":"71","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":11,"column":12,"nodeType":"96","messageId":"97","endLine":11,"endColumn":28},{"ruleId":"84","severity":1,"message":"89","line":32,"column":29,"nodeType":"86","messageId":"87","endLine":32,"endColumn":31},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'hidePopUp' and 'validateForm'. Either include them or remove the dependency array.","ArrayExpression",["100"],"React Hook useEffect has a missing dependency: 'cleanMessages'. Either include it or remove the dependency array.",["101"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["102","103"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["104","105"],"Expected '===' and instead saw '=='.","React Hook useEffect has a missing dependency: 'facebookLogin'. Either include it or remove the dependency array.",["106"],["98"],["99"],"no-unused-vars","'verificationCode' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},{"messageId":"111","fix":"112","desc":"113"},{"messageId":"114","fix":"115","desc":"116"},{"messageId":"111","fix":"117","desc":"113"},{"messageId":"114","fix":"118","desc":"116"},{"desc":"119","fix":"120"},"Update the dependencies array to be: [loginForm, signUpForm, location.pathname, hidePopUp, validateForm]",{"range":"121","text":"122"},"Update the dependencies array to be: [cleanMessages, location.pathname]",{"range":"123","text":"124"},"removeEscape",{"range":"125","text":"126"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"127","text":"128"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"129","text":"126"},{"range":"130","text":"128"},"Update the dependencies array to be: [facebookLogin]",{"range":"131","text":"132"},[806,848],"[loginForm, signUpForm, location.pathname, hidePopUp, validateForm]",[1454,1473],"[cleanMessages, location.pathname]",[2663,2664],"",[2663,2663],"\\",[5437,5438],[5437,5437],[534,536],"[facebookLogin]"]